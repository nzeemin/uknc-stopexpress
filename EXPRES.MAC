	.TITLE	EXPRES
	.MCALL	.EXIT
	.ASECT

	.=001000
START::
	CLR	@#177560
;	BIS     #010000, @#44	; Disable Ctrl-C
	MOV	SP, STACK	; Сохраняем начальное значение SP

	MOV	#GAMESC, R1	; Строка для подготовки игрового экрана
	CALL	PRINT
	CALL	PAUSE		; подождём пока очистится экран
Z01212: CALL	Z33256			; Очистка образа экрана и формирование экрана
Z01216: NOP				; CALL 025570 -- RETURN
;TODO: Цикл распаковки последовательности демо-режима
	JMP	Z01614

FINISH:
	MOV	STACK, SP	; Восстанавливаем стек
	MOV	#EXITSC, R1	; Строка очистки экрана перед выходом
	CALL	PRINT
	.EXIT

STACK:	.WORD	40000		; Начальное значение SP

EXITSC:	; Строка очистки экрана перед выходом
	.BYTE	33,246,061	; Формат экрана 80x24
	.BYTE	33,240,67	; Цвет символа
	.BYTE	33,241,61	; Цвет знакоместа 1
	.BYTE	33,242,61	; Цвет фона 1
	.BYTE	14		; Очистить экран
	.ASCII	/BYE!/
	.BYTE	0
	.EVEN

GAMESC:	; Строка подготовки игрового экрана
	.BYTE	33,246,62	; Формат экрана 40x24
	.BYTE	33,240,67	; Цвет символа
	.BYTE	33,241,61	; Цвет знакоместа 1 ;TODO
	.BYTE	33,242,61	; Цвет фона 1 ;TODO
	.BYTE	14		; Clear screen
	.BYTE	0
	.EVEN

; Подпрограмма: Печать строки: R1 = адрес строки, строка завершается 0; портит R0
PRINT:
PR0:	MOVB	(R1)+, R0	; Конец строки?
	BEQ	PR2		; да => завершаем
PR1:	TSTB	@#177564	; Источник канала 0 готов?
	BPL	PR1		; нет => ждём
	MOV	R0, @#177566	; передаём символ в канал 0
	BR	PR0
PR2:	RETURN

;Подпрограмма: пауза после очистки экрана чтобы ПП закончил работу
PAUSE:	; Pause to let PPU finish the previous commands
	MOV	#177777, R5
PAUSE0:	NOP
	SOB	R5, PAUSE0
	RETURN

	.=001614
; Сюда приходим после начальной очистки экрана и распаковки
Z01614: CALL	Z33102			; Очистка переменных
Z01620: NOP				; CALL 025570 -- RETURN
	NOP
Z01624: CALL	Z33420			; Очистка образа экрана
Z01630: CALL	Z33454			; Формирование реального экрана по образу
Z01634: MOV	#Z34604, R3		; блок 200 тайлов с 000
Z01640: CALL	Z33302			; Скопировать тайлы
Z01644: MOV	#Z37006, R3		; блок 200 тайлов с 200
Z01650: CALL	Z33302			; Скопировать тайлы
Z01654: MOVB	#000001, @#Y00006
Z01662: MOVB	@#Y00006, R0
Z01666: DECB	R0
Z01670: BEQ	Z01676
Z01672: CALL   	Z02276
Z01676: CALL	Z25666
Z01702: MOVB	#000001, @#Y00035	; Демо-режим
Z01710: MOVB	#000001, @#Y00007	; Stage = 1
Z01716: MOVB	#000003, @#Y00010	; Lives = 3
Z01724: MOV	#Y24000, Z34570		; Начало демо-последовательности
Z01732: MOVB	Z34570, @#Y00011
Z01740: MOVB	Z34571, @#Y00012
Z01746: MOV	#Z25206, Z34570	; Адрес бегущей строки для демо-режима
Z01754: MOVB	Z34570, @#Y00013
Z01762: MOVB	Z34571, @#Y00014
Z01770: JMP	Z02316
; Игровой цикл, начало
Z01774: CLRB	@#Y00035	; Реальный режим (не-демо)
Z02000: CALL	Z34226		; Клавиатура
Z02004: BEQ	Z02012
Z02006: JMP	Z02316
Z02012: MOVB   	@#Y00006, R0
Z02016: DECB   	R0
Z02020: BEQ    	Z02026
Z02022: CALL   	Z02276
Z02026: MOV    	#000037, R0
Z02032: MOVB   	R0, Z34560
Z02036: CALL   	Z34226			; Клавиатура
Z02042: BEQ    	Z02050
Z02044: JMP    	Z02316
Z02050: MOVB   	Z34560, R0
Z02054: MOV    	#Z31264, R3
Z02060: CLR    	R2
Z02062: MOV    	#000040, R4
Z02066: SUB    	R0, R4
Z02070: MOVB   	R0, Z34564
Z02074: MOVB   	R2, Z34565
Z02100: CALL   	Z33362
Z02104: MOVB   	(R3)+, (R1)+
Z02106: SOB    	R4, Z02104
Z02110: ADD    	R0, R3
Z02112: INC    	R2
Z02114: CMP    	#000030, R2
Z02120: BNE    	Z02062
Z02122: MOV    	R0, -(SP)
Z02124: CALL   	Z33454			; Формирование реального экрана по образу
Z02130: MOV    	(SP)+, R0
Z02132: DEC    	R0
Z02134: BPL    	Z02032
Z02136: MOV    	#070000, R1
Z02142: CALL   	Z34226			; Клавиатура
Z02146: BEQ    	Z02154
Z02150: JMP    	Z02316
Z02154: SOB    	R1, Z02142
Z02156: MOV    	#000001, R0
Z02162: MOVB   	R0, Z34560
Z02166: CALL   	034226			; Клавиатура
Z02172: BEQ    	Z02200
Z02174: JMP    	Z02316
Z02200: MOVB   	Z34560, R0
Z02204: MOV    	#Z31264, R3
Z02210: CLR    	R2
Z02212: ADD    	R0, R3
Z02214: MOV    	#000040, R4
Z02220: SUB    	R0, R4
Z02222: MOVB   	R2, 034565
Z02226: CLRB   	Z34564
Z02232: CALL   	Z33362
Z02236: MOVB   	(R3)+, (R1)+
Z02240: SOB    	R4, Z02236
Z02242: INC    	R2
Z02244: CMP    	#000030, R2
Z02250: BNE    	Z02212
Z02252: MOV    	R0, -(SP)
Z02254: CALL   	Z33454			; Формирование реального экрана по образу
Z02260: MOV    	(SP)+, R0
Z02262: INC    	R0
Z02264: CMP    	#000040, R0
Z02270: BNE    	Z02162
Z02272: JMP    	Z01620
;
Z02276: CALL   	Z33420			; Очистка образа экрана
	CALL   	Z33454			; Формирование реального экрана по образу
	MOV    	#Z37006, R3		; блок 200 тайлов с 200
Z02312: JMP    	Z33302			; Скопировать тайлы
;
Z02316: MOVB	@#Y00006, R0
Z02322: DECB	R0
Z02324: BEQ	Z02332
Z02326: CALL   	Z02276
Z02332: NOP				; CALL Z25570 -- RETURN
Z02336: CALL	Z25666
; Начало раунда
Z02342: CALL	Z25734
Z02346: CALL	Z20644
Z02352: CALL	Z10044			; Опускание человечка на верёвке
Z02356: BHIS	Z02364
Z02360: JMP	Z01774
; Основной игровой цикл?
Z02364: CALL	Z33454			; Формирование реального экрана по образу
Z02370: CALL	Z25454			; Увеличить счётчики
Z02374: CALL	Z22322			; Скопировать блок тайлов поезда на экран план
Z02400: CALL	Z24466			; Вывод индикаторной строки вверху экрана
Z02404: CALL	Z22754			; Уменьшить оставшееся время
Z02410: CALL	Z20724
Z02414: CALL	Z21552
Z02420: CALL	Z14664
Z02424: CALL	Z14420
Z02430: CALL	Z14034
Z02434: CALL	Z11400
Z02440: CALL	Z22050
Z02444: CALL	Z24774			; Если не демо, то GAME OVER
Z02450: CALL	Z20526
Z02454: CALL	Z25574
Z02460: CALL	Z22712
Z02464: CALL	Z21520			; Обработка счётчика 100162
Z02470: CALL	Z15346
Z02474: CALL	Z11672
Z02500: CALL	Z13674
Z02504: CALL	Z14516
Z02510: CALL	Z14140
Z02514: CALL	Z14330
Z02520: CALL	Z22202
Z02524: CALL	Z23002
Z02530: MOVB	@#Y00034, R0
Z02534: CMPB	R0, #000002
Z02540: BNE	Z02546
Z02542: JMP    	Z06202
Z02546: TSTB	R0
Z02550: BEQ	Z02556
Z02552: RETURN				; JMP Z05160 -- RETURN
Z02556: TSTB	@#Y00035		; демо-режим?
Z02562: BEQ	Z02612			;   да => переходим
Z02564: CALL   	Z34226			; Клавиатура
Z02570: BEQ    	Z02576
Z02572: JMP    	Z01774
Z02576: MOVB   	@#Y00035, R0		; берём признак демо-режима
Z02602: INCB   	R0			; (Y00035) = 377 ?
Z02604: BNE    	Z02612			; нет => переходим
Z02606: JMP    	Z01774
Z02612: CMPB	@#Y00155, #000012
Z02620: BLO	Z02364			; повтор
Z02622: MOVB   	#000017, @#Y00041	; Положение человечка X = 15.
Z02630: MOVB   	#000007, @#Y00042	; Положение человечка Y = 7
Z02636: CLR    	@#Y00044
Z02642: CLRB   	@#Y00051
Z02646: MOVB   	#000377, @#Y00050	; DX = -1 -- влево
; Игровой цикл -- ???
Z02654: CALL   	Z33454			; Формирование реального экрана по образу
Z02660: CALL   	Z25454			; Увеличить счётчики
Z02664: CALL   	Z22322			; Скопировать блок тайлов поезда на экран план
Z02670: CALL   	Z24466			; Вывод индикаторной строки вверху экрана
Z02674: CALL   	Z20724
Z02700: CALL   	Z21552
Z02704: CALL   	Z20526
Z02710: CALL   	Z25574
Z02714: CALL   	Z14420
Z02720: CALL   	Z14034
Z02724: CALL   	Z11400
Z02730: CALL   	Z22050
Z02734: CALL   	Z11256
Z02740: CALL   	Z24774			; Если не демо, то GAME OVER
Z02744: CALL   	Z22712
Z02750: CALL   	Z21520			; Обработка счётчика 100162
Z02754: CALL   	Z14516
Z02760: CALL   	Z14140
Z02764: CALL   	Z22202
Z02770: TSTB   	@#Y00016		; Проверяем быстрый счётчик
Z02774: BNE    	Z02654			; не ноль => повторяем цикл
Z02776: CALL   	Z13224
Z03002: DECB   	@#Y00041		; Положение человечка X на 1 меньше
Z03006: BNE    	Z02654
Z03010: NOP				; CALL Z06160 -- RETURN
	NOP
Z03014: CALL   	Z33454			; Формирование реального экрана по образу
Z03020: CALL   	Z25454			; Увеличить счётчики
Z03024: CALL   	Z22322			; Скопировать блок тайлов поезда на экран план
Z03030: CALL   	Z24466			; Вывод индикаторной строки вверху экрана
Z03034: CALL   	Z20724
Z03040: CALL   	Z21552
Z03044: CALL   	Z20526
Z03050: NOP				; CALL Z06162 -- RETURN
	NOP
Z03054: CALL   	Z25574
Z03060: CALL   	Z14420
Z03064: CALL   	Z14034
Z03070: CALL   	Z11400
Z03074: CALL   	Z22050
Z03100: CALL   	Z11350
Z03104: CALL   	Z11256
Z03110: CALL   	Z24774			; Если (100035)<>0 то GAME OVER
Z03114: CALL   	Z22712
Z03120: CALL   	Z21520			; Обработка счётчика Y00162
Z03124: CALL   	Z14516
Z03130: CALL   	Z14140
Z03134: CALL   	Z22202
Z03140: TSTB   	@#Y00016
Z03144: BNE    	Z03014
Z03146: MOVB   	@#100042, R0		; Положение человечка Y
Z03152: CMPB   	R0, #000014		; равно 12. ?
Z03156: BEQ    	Z03170			; да => переходим
Z03160: INCB   	R0			; вниз на 1 строку
Z03162: MOVB   	R0, @#Y00042		; Сохраняем положение человечка Y
Z03166: BR     	Z03014
Z03170: CALL   	Z11020
Z03174: MOV    	#002200, @#100174
Z03202: MOVB   	#000003, @#100176
Z03210: CALL   	Z25454			; Увеличить счётчики
Z03214: CALL   	Z22322			; Скопировать блок тайлов поезда на экран план
Z03220: CALL   	Z24466			; Вывод индикаторной строки вверху экрана
Z03224: CALL   	Z20724
Z03230: CALL   	Z21552
Z03234: CALL   	Z22050
Z03240: CALL   	Z24774			; Если (100035)<>0 то GAME OVER
Z03244: CALL   	Z22712
Z03250: CALL   	Z21520			; Обработка счётчика Y00162
Z03254: CALL   	Z22202
Z03260: CALL   	Z20526
Z03264: CALL   	Z33454			; Формирование реального экрана по образу
Z03270: CMPB   	@#Y00155, #000013
Z03276: BNE    	Z03306
Z03300: TSTB   	@#Y00154
Z03304: BEQ    	Z03326
Z03306: TSTB   	@#Y00015
Z03312: BNE    	Z03210
Z03314: CALL   	Z20134
Z03320: CALL   	Z26740
Z03324: BR     	Z03210
Z03326: NOP				; CALL 025570 -- RETURN
Z03332: CALL   	Z33420			; Очистка образа экрана
Z03336: CALL   	Z33454			; Формирование реального экрана по образу
Z03342: MOV    	#Z41210, R3		; блок 200 тайлов с 200 тайла
Z03346: CALL   	Z33302			; Скопировать тайлы
Z03352: CALL   	Z26156
Z03356: CALL   	Z20644
Z03362: CALL   	Z10470
Z03366: BHIS   	Z03374
Z03370: JMP    	Z01774
Z03374: CALL   	Z33454			; Формирование реального экрана по образу
Z03400: CALL   	Z25454
Z03404: CALL   	Z22322			; Скопировать блок тайлов поезда на экран план
Z03410: CALL   	Z24466			; Вывод индикаторной строки вверху экрана
Z03414: CALL   	Z22754			; Уменьшить оставшееся время
Z03420: CALL   	Z20724
Z03424: CALL   	Z21552
Z03430: CALL   	Z14664
Z03434: CALL   	Z20072
Z03440: CALL   	Z16762
Z03444: CALL   	Z17526
Z03450: CALL   	Z11400
Z03454: CALL   	Z22462
Z03460: CALL   	Z24774			; Если (100035)<>0 то GAME OVER
Z03464: CALL   	Z20526
Z03470: CALL   	Z25574
Z03474: CALL   	Z22712			; Скроллинг насыпи под поездом
Z03500: CALL   	Z21520			; Обработка счётчика скроллируемого фона
Z03504: CALL   	Z22202
Z03510: CALL   	Z11672
Z03514: CALL   	Z13674
Z03520: CALL   	Z17154
Z03524: CALL   	Z17650
Z03530: CALL   	Z15346
Z03534: CALL   	Z23606
Z03540: TSTB   	@#Y00034
Z03544: BEQ    	Z03552
Z03546: JMP    	Z07052
Z03552: TSTB   	@#Y00035		; демо-режим?
Z03556: BEQ    	Z03606			; нет => переходим
Z03560: CALL   	Z34226			; Клавиатура
Z03564: BEQ    	Z03572
Z03566: JMP    	Z01774
Z03572: MOVB   	@#Y00035, R0		; берём признак демо-режима
Z03576: INCB   	R0			; (Y00035) = 377 ?
Z03600: BNE    	Z03606			; нет => переходим
Z03602: JMP    	Z01774
Z03606: TSTB   	@#Y00036
Z03612: BNE    	Z03620
Z03614: JMP    	Z03374
Z03620: TSTB   	@#Y00037
Z03624: BNE    	Z03632
Z03626: JMP    	Z03374
Z03632: CMPB   	@#Y00041, #000002	; Положение человечка = 2 ?
Z03640: BEQ    	Z03646
Z03642: JMP    	Z03374
; Игровой экран CONGRATULATIONS
Z03646: CALL   	Z11020
	RETURN ;TODO

Z06202: RETURN ;TODO

Z07052: RETURN ;TODO

	.=010044
; Подпрограмма: Опускание человечка на верёвке
Z10044: NOP				; CALL 025570 -- RETURN
	NOP
Z10050: MOV	#Z10452, R3
Z10054: NOP				; CALL Z25572 -- RETURN
	NOP
Z10060: MOVB	#000353, @#Y00042	; Положение человечка Y = -21
Z10066: TSTB	@#Y00035		; демо-режим?
Z10072: BEQ	Z10106			; нет => переходим
Z10074: CALL	Z34226			; Клавиатура
Z10100: SEC	
Z10102: BEQ	Z10106			; нет нажатой клавиши => переходим
Z10104: RETURN	
Z10106: CALL	Z33454			; Формирование реального экрана по образу
Z10112: CALL	Z25454			; Увеличить счётчики
Z10116: CALL	Z22322			; Скопировать блок тайлов поезда на экран план
Z10122: CALL	Z24466			; Вывод индикаторной строки вверху экрана
Z10126: CALL	Z10416			; Печать строки STAGE 1  READY
Z10132: CALL	Z24774			; Если демо, то GAME OVER
Z10136: CALL	Z22712
Z10142: CALL	Z20724
Z10146: CALL	Z21520			; Обработка счётчика Y00162
Z10152: CALL	Z11400
Z10156: MOVB	@#Y00042, R0		; Положение человечка Y
Z10162: ADD	#000003, R0		; на три строки ниже
Z10166: MOVB	R0, @#Y00174
Z10172: CALL	Z10354
Z10176: TSTB	@#Y00016
Z10202: BNE	Z10066
Z10204: MOVB	@#Y00042, R0		; Положение человечка Y
Z10210: CMPB	R0, #000007		; уже на крыше поезда?
Z10214: BEQ	Z10226			; да => переходим
Z10216: INCB	R0			; на строку ниже
Z10220: MOVB	R0, @#Y00042		; Сохраняем Положение человечка Y
Z10224: BR	Z10066
Z10226: TSTB	@#Y00035		; демо-режим?
Z10232: BEQ	Z10246			; нет => переходим
Z10234: CALL   	Z34226			; Клавиатура
Z10240: SEC    	
Z10242: BEQ    	Z10246
Z10244: RETURN 	
Z10246: CALL	Z33454			; Формирование реального экрана по образу
Z10252: CALL	Z25454
Z10256: CALL	Z22322			; Скопировать блок тайлов поезда на экран план
Z10262: CALL	Z24466			; Вывод индикаторной строки вверху экрана
Z10266: CALL	Z10416			; Печать строки STAGE 1  READY
Z10272: CALL	Z24774			; Если демо, то GAME OVER
Z10276: CALL	Z22712
Z10302: CALL	Z20724
Z10306: CALL	Z21520			; Обработка счётчика Y00162
Z10312: CALL	Z11400
Z10316: CALL	Z10354
Z10322: TSTB	@#Y00016
Z10326: BNE	Z10226
Z10330: MOVB	@#Y00174, R0
Z10334: BEQ	Z10346
Z10336: DECB	R0
Z10340: MOVB	R0, @#Y00174
Z10344: BR	Z10226
Z10346: NOP				; CALL 025570 -- RETURN
	NOP
Z10352: RETURN	
;
Z10354: MOV	#<Y01106+21>, R1
Z10360: MOVB	@#Y00174, R0
Z10364: BNE	Z10370
Z10366: RETURN	
Z10370: BPL	Z10374
Z10372: RETURN	
Z10374: MOV	R0, R2
Z10376: BIC	#177400, R2
Z10402: MOVB	#000342, (R1)
Z10406: ADD	#000040, R1
Z10412: SOB	R2, Z10402
Z10414: RETURN	

; Подпрограмма: Печать строки STAGE 1  READY
Z10416: MOV	#Z10432, R3		; Адрес строки STAGE 1  READY
Z10422: MOV	#<Y01106+211>, R1
Z10426: JMP	Z34366			; Печать строки
;
Z10432: .ASCIZ	/STAGE 1  READY!/

Z10452: .BYTE	024,000,036,000,000,011,001,260,020,010,020,170,002,014	; ???
;
Z10470:	RETURN	;STUB

Z11020:	RETURN	;STUB

Z11256:	RETURN	;STUB

Z11350:	RETURN	;STUB

	.=011400
; Подпрограмма
Z11400: MOVB	@#Y00041, Z34564	; Положение человечка X сохраняем
Z11406: MOVB	@#Y00042, Z34565	; Положение человечка Y сохраняем
Z11414: CALL	Z33362
Z11420: TSTB	@#Y00044
Z11424: BNE	Z11576
Z11426: MOV	#Z11626, R3
Z11432: TSTB	@#Y00042
Z11436: BPL	Z11534
Z11440: CLRB	Z34565
Z11444: MOVB	@#Y00041, Z34564	; Положение человечка X сохраняем
Z11452: CALL	Z33362
Z11456: MOVB	@#Y00042, R0		; Положение человечка Y
Z11462: NEGB	R0
Z11464: BIC	#177400, R0
Z11470: CMPB	R0, #000002
Z11474: BHIS	Z11514
Z11476: ASLB	R0
Z11500: ASLB	R0
Z11502: ADD	R0, R3
Z11504: CALL	Z25402
Z11510: JMP	Z25402
Z11514: CMPB	R0, #000003
Z11520: BLO	Z11524
Z11522: RETURN	
Z11524: MOV	#Z11637, R3
Z11530: JMP	Z25402
Z11534: MOVB	@#Y00051, @#Y01103
Z11542: CALL	Z25402
Z11546: MOVB	@#Y00051, @#Y01103
Z11554: TSTB	@#Y00043
Z11560: BNE	Z11566
Z11562: JMP	Z25402
Z11566: MOV    	#Z11644, R3
Z11572: JMP    	Z25402
Z11576: MOV    	#Z11651, R3
Z11602: MOVB   	@#Y00051, R0
Z11606: ASLB   	R0
Z11610: ASLB   	R0
Z11612: ASLB   	R0
Z11614: ASLB   	R0
Z11616: MOVB   	R0, @#Y01103
Z11622: JMP    	Z25402
;
	.EVEN
Z11626:	.BYTE	200,001,201,037,220,001,221,037,000
Z11637:	.BYTE	240,001,241,000,000
Z11644:	.BYTE	260,001,261,000,000
Z11651:	.BYTE	204,001,205,001,206,001,207,035,224,001,225,001,226
	.BYTE	001,227,000,000
	.EVEN
;
Z11672: TSTB	@#Y00045
Z11676: BEQ	Z11704
Z11700: JMP    	Z13276
Z11704: TSTB	@#Y00047
Z11710: BEQ	Z11716
Z11712: JMP    	Z13140
Z11716: TSTB	@#Y00036
Z11722: BNE	Z11746
Z11724: MOVB	#000017, @#Y00041		; Положение человечка X = 15.
Z11732: MOV	#000007, R0
Z11736: MOVB	@#Y00006, R4
Z11742: DECB	R4
Z11744: BEQ	Z11764
Z11746: MOV    	#000020, R0
Z11752: TSTB   	@#Y00046
Z11756: BEQ    	Z11764
Z11760: MOV    	#000014, R0
Z11764: MOVB	R0, @#Y00042			; Сохраняем Положение человечка Y
Z11770: TSTB	@#Y00035			; демо-режим?
Z11774: BEQ	Z12056				; нет => читаем клавиатуру
Z11776: MOVB   	@#Y00011, Z34570		; Берём адрес демо-последовательности
Z12004: MOVB   	@#Y00012, Z34571		; /
Z12012: MOV    	Z34570, R3			; передаём его в R3
Z12016: MOVB   	(R3)+, R0			; следующий байт
Z12020: MOV    	R3, Z34570			;
Z12024: MOVB   	Z34570, @#Y00011		; сохраняем увеличенный адрес
Z12032: MOVB   	Z34571, @#Y00012		; /
Z12040: SUB    	#134377, R3 ;TODO		; дошли до конца?
Z12044: BLO    	Z12224				; нет => переходим
Z12046: MOVB   	#000377, @#Y00035		; ставим признак что дошли до конца демо
Z12054: RETURN 	
; Здесь мы получаем нажатый символ от клавиатуры
Z12056: TSTB	Z34224
	;TODO
Z12116: BR	Z12134
Z12134: MOVB	@#Y00011, Z34570
Z12142: MOVB	@#Y00012, Z34571
Z12150: MOV	Z34570, R3
Z12154: SUB	#134377, R3	;TODO ???
Z12160: BHIS	012224
Z12162: MOVB	@#Y00011, Z34570
Z12170: MOVB	@#Y00012, Z34571
Z12176: MOV	Z34570, R3
Z12202: MOVB	R0, (R3)+
Z12204: MOV	R3, Z34570
Z12210: MOVB	Z34570, @#Y00011
Z12216: MOVB	Z34571, @#Y00012
Z12224: MOV	R0, -(SP)
Z12226: BIT	#000200, R0
Z12232: BEQ	Z12240
Z12234: CALL	Z13556
Z12240: MOV	(SP)+, R0
Z12242: BIC	#177600, R0
Z12246: SUB	#000061, R0
Z12252: BIC	#177400, R0
	;TODO
Z12336: RETURN	
	;TODO

Z13140:	RETURN	;STUB

	.=013224
Z13224: TSTB   	@#Y00050
Z13230: BEQ    	Z13266
Z13232: TSTB   	@#Y00045
Z13236: BNE    	Z13266
Z13240: TSTB   	@#Y00047
Z13244: BNE    	Z13266
Z13246: MOVB   	@#Y00043, R0
Z13252: MOV    	#000020, R4
Z13256: XOR    	R4, R0
Z13260: MOVB   	R0, @#Y00043
Z13264: RETURN 	
Z13266: MOVB   	#000020, @#Y00043
Z13274: RETURN 	

Z13276:	RETURN	;STUB

Z13556: CLRB	@#Y00044
Z13562: TSTB	@#Y00054
Z13566: BEQ	Z13672
Z13570: CMPB   	@#Y00042, #000007	; Положение человечка Y = 7 ?
Z13576: BNE    	Z13672			; нет => выходим
Z13600: TSTB   	@#Y00065
Z13604: BEQ    	Z13616
Z13606: CMPB   	@#Y00063, #000040
Z13614: BLO    	Z13672			; меньше => выходим
Z13616: CLR    	R0
Z13620: MOVB   	R0, @#Y00054
Z13624: INCB   	R0
Z13626: MOVB   	R0, @#Y00065
Z13632: MOVB   	R0, @#Y00071
Z13636: MOVB   	#000050, @#Y00066
Z13644: CLRB   	@#Y00067
Z13650: MOVB   	#000021, @#Y00063
Z13656: MOVB   	#000010, @#Y00064
Z13664: MOVB   	#000360, @#Y00072	; = 240.
Z13672: RETURN	
;
Z13674:	RETURN	;STUB

	.=014032
Z14032: RETURN	
;
Z14034: TSTB	@#Y00065
Z14040: BEQ	Z14032
Z14042: MOVB   	@#Y00063, R0
Z14046: CMPB   	R0, #000036
Z14052: BHIS   	Z14032
Z14054: MOVB   	R0, Z34564
Z14060: MOVB   	@#Y00064, 034565
Z14066: CALL   	Z33362
Z14072: MOV    	#Z14126, R3
Z14076: MOVB   	@#Y00067, R0
Z14102: CMPB   	R0, #000003
Z14106: BLO    	Z14114
Z14110: MOV    	#000001, R0
Z14114: ASL    	R0
Z14116: MOVB   	R0, @#Y01103
Z14122: JMP    	Z25402
;
Z14126: .BYTE	312,001,313,037,332,001,333,000,000,000
;
Z14140: MOVB	@#Y00065, R0
Z14144: BEQ	Z14264
Z14146: DECB   	R0
Z14150: BNE    	Z14274
Z14152: MOVB   	@#Y00063, R0
Z14156: BIC    	#177400, R0
Z14162: CMPB   	R0, #000040
Z14166: BLO    	Z14176
Z14170: SUB    	#000040, R0
Z14174: BR     	Z14156
Z14176: BIC    	#177400, R0
Z14202: MOV    	#Y00202, R3		; Адрес блока тайлов поезда
Z14206: ADD    	R0, R3
Z14210: CMPB   	(R3), #000040
Z14214: BNE    	Z14224
Z14216: MOVB   	#000002, @#Y00065
Z14224: MOV    	#Y00067, R3
Z14230: TSTB   	@#Y00016
Z14234: BNE    	Z14242
Z14236: CALL   	Z25554
Z14242: TSTB   	@#Y00022		; Быстрый счётчик = 0 ?
Z14246: BNE    	Z14264			; нет => переходим
Z14250: DECB   	@#Y00066
Z14254: BNE    	Z14266
Z14256: MOVB   	#000002, @#Y00065
Z14264: RETURN	
Z14266: INCB   	@#Y00063
Z14272: RETURN 	
Z14274: MOVB   	@#Y00064, R0
Z14300: CMPB   	R0, #000026
Z14304: BLO    	Z14320
Z14306: CLRB   	@#Y00065
Z14312: CLRB   	@#Y00075
Z14316: RETURN 	
Z14320: INCB   	R0
Z14322: MOVB   	R0, @#Y00064
Z14326: RETURN 	
;
Z14330: TSTB	@#Y00035		; демо-режим?
Z14334: BNE	Z14416			; да => RETURN
Z14336: TSTB	@#Y00071
Z14342: BEQ	Z14416			; 0? => RETURN
Z14344: MOVB   	@#Y00072, R2
Z14350: BIC    	#177400, R2		; оставляем младший байт
Z14354: MOV    	#000005, R1
Z14360: CALL   	Z34300			; Звук
Z14364: MOVB   	@#Y00072, R0
Z14370: BIC    	#177400, R0
Z14374: SUB    	#000036, R0		; R0 = R0 - 30.
Z14400: MOVB   	R0, @#Y00072
Z14404: BIT    	#177400, R0
Z14410: BEQ    	Z14416			; 0? => RETURN
Z14412: CLRB   	@#Y00071
Z14416: RETURN	
;
Z14420: TSTB	@#Y00074
Z14424: BEQ	Z14416			; 0? => RETURN
Z14426: MOVB	@#Y00073, R0
Z14432: CMPB	R0, #000036
Z14436: BHIS	Z14416			; ? => RETURN
Z14440: MOVB	R0, Z34564
Z14444: MOVB	#000005, 034565
Z14452: CALL	Z33362
Z14456: MOV	#Z14126, R3
Z14462: MOVB	@#Y00076, R0
Z14466: CMPB	R0, #000003
Z14472: BLO	Z14500
Z14474: MOV	#000001, R0
Z14500: ASL	R0
Z14502: ADD	#000040, R0
Z14506: MOVB	R0, @#Y01103
Z14512: JMP	Z25402
;
Z14516: TSTB	@#Y00074
Z14522: BEQ	Z14622
Z14524: MOV	#Y00076, R3
Z14530: TSTB	@#Y00016
Z14534: BNE	Z14542
Z14536: CALL	Z25554
Z14542: MOVB	@#Y00050, R0		; берём DX
Z14546: BEQ	Z14570			; DX = 0? => переходим
Z14550: DECB   	R0
Z14552: BEQ    	Z14562
Z14554: MOVB   	@#Y00015, R0
Z14560: BR     	Z14574
Z14562: MOVB   	@#Y00020, R0
Z14566: BR     	Z14574
Z14570: MOVB	@#Y00016, R0
Z14574: TSTB	R0
Z14576: BNE	Z14620
Z14600: INCB	@#Y00073
Z14604: CMPB	@#Y00073, #000100
Z14612: BLO	Z14620
Z14614: CLR    	@#Y00074
Z14620: RETURN	
Z14622: MOVB	@#Y00075, R0
Z14626: SUB	#000002, R0
Z14632: MOVB	R0, @#Y00075
Z14636: TSTB	R0
Z14640: BMI	Z14662
Z14642: MOVB	@#Y00065, R0
Z14646: BNE	Z14662
Z14650: MOVB	R0, @#Y00073
Z14654: INC	R0
Z14656: MOVB	R0, @#Y00074
Z14662: RETURN	
;
Z14664: TSTB	@#Y00036
Z14670: BNE	Z14704
Z14672: MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z14676: MOVB	(R5), R0
Z14700: INCB	R0
Z14702: BNE	Z14706
Z14704: RETURN	
Z14706: TSTB	000005(R5)
Z14712: BEQ	Z14756
Z14714: MOVB	000006(R5), R0
Z14720: CMPB	R0, #000040
Z14724: BHIS	Z14756
Z14726: MOVB	R0, Z34564
Z14732: MOVB	000007(R5), Z34565
Z14740: CALL	Z33362
Z14744: MOVB	@#Y00006, R0
Z14750: ADD	#000347, R0
Z14754: MOVB	R0, (R1)
Z14756: TSTB	(R5)
Z14760: BNE	Z14770
Z14762: ADD	#000010, R5
Z14766: BR	Z14676
Z14770: MOVB	000002(R5), R0
Z14774: CMPB	R0, #000036
Z15000: BHIS	Z14762
Z15002: MOVB	R0, Z34564
Z15006: MOVB	000003(R5), Z34565
Z15014: CALL	Z33362
Z15020: MOVB	000004(R5), R0
Z15024: CMPB	R0, #000010
Z15030: BEQ	Z15234
Z15032: MOV	#Z15250, R3
Z15036: MOVB	000004(R5), R0
Z15042: BIC	#177400, R0
Z15046: MOV	R0, R2
Z15050: ASL	R2
Z15052: ADD	R0, R2
Z15054: ASL	R2
Z15056: ADD	R2, R3
Z15060: MOVB	000001(R5), R4
Z15064: BIC	#177400, R4
Z15070: MOV	#000037, R2
Z15074: MOVB	(R5), R0
Z15076: DECB	R0
Z15100: BEQ	Z15106
Z15102: MOV	#000003, R4
Z15106: MOVB	(R3)+, (R1)+
Z15110: MOVB	(R3)+, (R1)
Z15112: ADD	R2, R1
Z15114: SOB	R4, Z15106
Z15116: CMPB	(R5), #000003
Z15122: BNE	Z14762
Z15124: CMPB	000001(R5), #000004
Z15132: BHIS	Z14762
Z15134: MOVB	000002(R5), Z34564
Z15142: MOVB	@#Y00006, R0
Z15146: DECB	R0
Z15150: BNE	Z15172
Z15152: INCB	Z34564
Z15156: INCB	Z34564
Z15162: MOVB	#000010, Z34565
Z15170: BR	Z15204
Z15172: DECB   	Z34564
Z15176: MOVB   	#000021, Z34565
Z15204: CALL	Z33362
Z15210: MOVB	@#Y00006, R0
Z15214: BIC	#177400, R0
Z15220: SUB	#000352, R0
Z15224: NEGB	R0
Z15226: MOVB	R0, (R1)
Z15230: JMP	Z14762
Z15234: MOV    	#Z15330, R3
Z15240: CALL   	Z25402
Z15244: JMP    	Z14762
;
Z15250:	.BYTE	216,217,210,211,230,231, 216,217,212,213,232,233
	.BYTE	216,217,214,215,234,235, 216,217,212,213,232,233
	.BYTE	216,217,250,251,270,271, 216,217,252,253,272,273
	.BYTE	254,255,274,275,236,237, 256,257,276,277,236,237
Z15330:	.BYTE	254,001,255,001,256,036,274,001,275,001,276,000,000,000
;
Z15346: TSTB	@#Y00036
Z15352: BNE	Z15470
Z15354: CLRB	@#Y00141
Z15360: MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z15364: MOVB	(R5), R0
Z15366: CMPB	R0, #000377
Z15372: BEQ	Z15414
Z15374: DECB	R0
Z15376: BEQ	Z15406
Z15400: ADD	#000010, R5
Z15404: BR	Z15364
Z15406: MOVB	#000001, @#Y00141
Z15414: MOV	#Y00100, R5		; Адрес 4-х записей объектов
Z15420: MOVB	(R5), R0
Z15422: INCB	R0
Z15424: BEQ	Z15470
Z15426: TSTB	000005(R5)
Z15432: BEQ	Z15512
Z15434: MOVB	@#Y00006, R0
Z15440: DECB	R0
Z15442: BNE	Z15472
Z15444: DECB	000006(R5)
Z15450: MOVB	000006(R5), R0
Z15454: CMPB	R0, #000370
Z15460: BLO	Z15512
Z15462: CLRB   	000005(R5)
Z15466: BR     	Z15512
Z15470: RETURN	
Z15472: INCB   	000006(R5)
Z15476: CMPB   	000006(R5), #000100
Z15504: BLO    	Z15512
Z15506: CLRB   	000005(R5)
Z15512: TSTB	@#Y00016
Z15516: BNE	Z15572
Z15520: MOVB	(R5), R0
Z15522: DECB	R0
Z15524: BEQ	Z15546
Z15526: DECB	R0
Z15530: BEQ	Z15552
Z15532: DECB	R0
Z15534: BEQ	Z15556
Z15536: DECB	R0
Z15540: BEQ	Z15562
Z15542: JMP	Z15602
Z15546: JMP	Z16040
Z15552: JMP	Z16212
Z15556: JMP	Z16444
Z15562: JMP    	Z16614
Z15566: JMP    	Z16720
Z15572: ADD	#000010, R5
Z15576: JMP	Z15420
Z15602: TSTB	@#Y00034
Z15606: BNE	Z15572
Z15610: DECB	000001(R5)
Z15614: BNE	Z15572
Z15616: TSTB	@#Y00141
Z15622: BNE	Z15566
Z15624: MOVB	@#Y00006, R0
Z15630: DECB	R0
Z15632: BNE	Z15760
Z15634: TSTB	@#Y00155
Z15640: BEQ	Z15566
Z15642: MOV	#Y00202, R3		; Адрес блока тайлов поезда
Z15646: MOV	#000040, R1		; 32.
Z15652: MOV	#000040, R0		; пустой тайл
Z15656: CMPB	R0, (R3)+
Z15660: BEQ	Z15666
Z15662: SOB    	R1, Z15656
Z15664: BR     	Z15670
Z15666: DEC	R1
Z15670: MOV	#000037, R0
Z15674: SUB	R1, R0
Z15676: CMPB	R0, #000021
Z15702: BHIS	Z15716
Z15704: ADD	#000040, R0
Z15710: BIC	#177400, R0
Z15714: BR	Z15676
Z15716: MOVB	#000001, (R5)
Z15722: MOVB	#000001, 000001(R5)
Z15730: MOVB	R0, 000002(R5)
Z15734: MOVB	#000013, 000003(R5)
Z15742: CLRB	000004(R5)
Z15746: MOVB	#000001, @#Y00141
Z15754: JMP	Z15572
Z15760: MOVB   	#000002, (R5)
Z15764: MOV    	#000012, R0
Z15770: MOVB   	@#Y00007, R4		; Stage
Z15774: DECB   	R4
Z15776: BEQ    	Z16004
Z16000: MOV    	#000005, R0
Z16004: MOVB   	R0, 000001(R5)
Z16010: CLRB   	000002(R5)
Z16014: MOVB   	#000020, 000003(R5)
Z16022: MOVB   	#000001, 000004(R5)
Z16030: JMP    	Z15572
Z16034: JMP    	Z16720
Z16040: MOVB	@#Y00006, R0
Z16044: DECB	R0
Z16046: BNE	Z16034
Z16050: MOVB	#000001, @#Y00141
Z16056: CMPB	000002(R5), #000100
Z16064: BHIS	Z16034
Z16066: CMPB	000001(R5), #000003
Z16074: BEQ	Z16112
Z16076: DECB	000003(R5)
Z16102: INCB	000001(R5)
Z16106: JMP	Z15572
Z16112: CMPB	000003(R5), #000006
Z16120: BEQ	Z16132
Z16122: DECB	000003(R5)
Z16126: JMP	Z15572
Z16132: MOVB	#000002, (R5)
Z16136: MOV	#000012, R0
Z16142: MOVB	@#Y00007, R4		; Stage
Z16146: DECB	R4
Z16150: BEQ	Z16156
Z16152: MOV    	#000005, R0
Z16156: MOVB	R0, 000001(R5)
Z16162: DECB	000002(R5)
Z16166: DECB	000002(R5)
Z16172: MOVB	#000007, 000003(R5)
Z16200: MOVB	#000001, 000004(R5)
Z16206: JMP	Z15572
Z16212: MOVB	@#Y00006, R0
Z16216: DECB	R0
Z16220: BNE	Z16350
Z16222: CMPB	000002(R5), #000017
Z16230: BLO	Z16206
Z16232: CMPB	000002(R5), #000100
Z16240: BLO	Z16246
Z16242: JMP	Z16720
Z16246: TSTB	@#Y00034
Z16252: BNE	Z16206
Z16254: DECB	000001(R5)
Z16260: BNE	Z16304
Z16262: MOVB	#000003, (R5)
Z16266: CLRB	000001(R5)
Z16272: MOVB	#000005, 000004(R5)
Z16300: JMP	Z15572
Z16304: INCB	000004(R5)
Z16310: CMPB	000004(R5), #000004
Z16316: BLO	Z16324
Z16320: CLRB	000004(R5)
Z16324: DECB	000002(R5)
Z16330: CMPB	000002(R5), #000036
Z16336: BLO	Z16344
Z16340: DECB   	000002(R5)
Z16344: JMP	Z15572
Z16350: CMPB   	000002(R5), #000100
Z16356: BHIS   	Z16242
Z16360: DECB   	000001(R5)
Z16364: BNE    	Z16410
Z16366: MOVB   	#000003, (R5)
Z16372: CLRB   	000001(R5)
Z16376: MOVB   	#000005, 000004(R5)
Z16404: JMP    	Z15572
Z16410: INCB   	000004(R5)
Z16414: CMPB   	000004(R5), #000004
Z16422: BLO    	Z16430
Z16424: CLRB   	000004(R5)
Z16430: INCB   	000002(R5)
Z16434: JMP    	Z15572
Z16440: JMP    	Z16720
Z16444: CMPB	000002(R5), #000100
Z16452: BHIS	Z16440
Z16454: INCB	000001(R5)
Z16460: MOVB	000001(R5), R0
Z16464: CMPB	R0, #000010
Z16470: BLO	Z16510
Z16472: MOVB	#000002, (R5)
Z16476: MOVB	#000040, 000001(R5)
Z16504: JMP	Z15572
Z16510: CMPB	R0, #000004
Z16514: BNE	Z16504
Z16516: MOVB	#000004, 000004(R5)
Z16524: MOVB	#000001, 000005(R5)
Z16532: MOVB	@#Y00006, R0
Z16536: DECB	R0
Z16540: BNE	Z16566
Z16542: MOV	000002(R5), R0
Z16546: DECB	R0
Z16550: MOVB	R0, 000006(R5)
Z16554: MOVB	#000010, 000007(R5)
Z16562: JMP	Z15572
Z16566: MOVB   	000002(R5), R0
Z16572: ADD    	#000002, R0
Z16576: MOVB   	R0, 000006(R5)
Z16602: MOVB   	#000021, 000007(R5)
Z16610: JMP    	Z15572
Z16614: MOVB   	@#Y00006, R0
Z16620: DECB   	R0
Z16622: BNE    	Z16712
Z16624: INCB   	000002(R5)
Z16630: INCB   	000003(R5)
Z16634: MOVB   	000004(R5), R0
Z16640: SUB    	#000006, R0
Z16644: BIC    	#177400, R0
Z16650: MOV    	#000001, R4
Z16654: XOR    	R4, R0
Z16656: ADD    	#000006, R0
Z16662: MOVB   	R0, 000004(R5)
Z16666: CMPB   	000003(R5), #000026
Z16674: BLO    	Z16504
Z16676: CLRB   	(R5)
Z16700: MOVB   	#000024, 000001(R5)
Z16706: JMP    	Z15572
Z16712: DECB   	000001(R5)
Z16716: BNE    	Z16504
Z16720: CLRB	(R5)
Z16722: MOVB	@#Y00006, R0
Z16726: BIC	#177400, R0
Z16732: CMPB	R0, #000004
Z16736: BLO	Z16744
Z16740: MOV    	#000003, R0
Z16744: ASL	R0
Z16746: ASL	R0
Z16750: ASL	R0
Z16752: MOVB	R0, 000001(R5)
Z16756: JMP	Z15572
Z16762: MOVB   	@#Y00144, R1
Z16766: MOVB   	@#Y00143, R0
Z16772: ADD    	R1, R0
Z16774: MOVB   	R0, @#101102
Z17000: MOVB   	@#Y00142, Z34564
Z17006: MOVB   	#000015, Z34565
Z17014: MOV    	#Z17150, R3
Z17020: CALL   	Z17054
Z17024: INCB   	Z34564
Z17030: CALL   	Z17054
Z17034: DECB   	Z34564
	RETURN	;STUB

Z17054:	RETURN	;STUB

Z17150:	.WORD	0

Z17154: RETURN	;STUB

Z17526:	RETURN	;STUB

Z17650: RETURN	;STUB

Z20072: RETURN	;STUB

Z20134:	RETURN	;STUB

	.=020524
Z20524: RETURN	
;
Z20526: INC	@#Y00156
Z20532: MOV	@#Y00156, R3
Z20536: MOVB	(R3), R0
Z20540: CMPB	R0, #000377
Z20544: BNE	Z20556
Z20546: MOV	#Z20616, R3
Z20552: MOV	R3, @#Y00156
Z20556: TSTB	R0
Z20560: BEQ	Z20524
Z20562: MOVB	@#Y00155, R0
Z20566: BISB	@#Y00154, R0
Z20572: BEQ	Z20524
Z20574: TSTB	@#Y00035		; демо-режим?
Z20600: BNE	Z20524
Z20602: MOV	#000702, R2
Z20606: MOV	#000002, R1
Z20612: JMP	Z34300			; Звук и RETURN
;
Z20616:	.BYTE	001,000,001,000,000,001,000,001,000,000,000,000,000,000,000,000
	.BYTE	000,000,000,000,000,377
;
Z20644: MOV	#Z27040, R3		; Адрес блока тайлов поезда, начальное состояние
Z20650: MOV	#Y00202, R2		; Адрес блока тайлов поезда
Z20654: MOV	#000640, R1		; 416. -- 13 строк
Z20660: MOVB	(R3)+, (R2)+		;   копируем
Z20662: SOB	R1, Z20660		; повторяем
Z20664: MOVB	@#Y00006, R0
Z20670: BIC	#177400, R0
Z20674: DECB	R0
Z20676: BNE	Z20702
Z20700: RETURN	
Z20702: MOV    	#Z27700, R3
Z20706: MOV    	#<Y00202+40>, R2
Z20712: MOV    	#000400, R1
Z20716: MOVB   	(R3)+, (R2)+
Z20720: SOB    	R1, Z20716
Z20722: RETURN 	
;
; Подпрограмма: Скроллирующийся фон
Z20724: MOV	#<Y01106+400>, R1
Z20730: MOV	@#Y00162, R3
Z20734: ADD	#Z21126, R3
Z20740: MOV	#000040, R0
Z20744: MOV	R0, R2
Z20746: CMPB	R0, (R3)
Z20750: BEQ	Z20754
Z20752: MOVB	(R3), (R1)
Z20754: INC	R3
Z20756: INC	R1
Z20760: SOB	R2, Z20746
Z20762: MOV	@#Y00162, R3
Z20766: ADD	#Z21323, R3
Z20772: MOV	#000040, R0
Z20776: MOV	R0, R2
Z21000: CMPB	R0, (R3)
Z21002: BEQ	Z21012
Z21004: CMPB	R0, (R1)
Z21006: BNE	Z21012
Z21010: MOVB	(R3), (R1)
Z21012: INC	R3
Z21014: INC	R1
Z21016: SOB	R2, Z21000
Z21020: MOV	R1, -(SP)
Z21022: MOV	@#Y00162, R3
Z21026: ADD	#Z21323, R3
Z21032: MOV	#000041, R1
Z21036: MOV	#000370, R0
Z21042: CMPB	R0, (R3)+
Z21044: BEQ	Z21054
Z21046: SOB	R1, Z21042
Z21050: MOV	(SP)+, R1
Z21052: RETURN	
Z21054: DEC	R1
Z21056: MOV	R1, R2
Z21060: MOV	(SP)+, R1
Z21062: MOV	#000040, R3
Z21066: SUB	R2, R3
Z21070: ADD	#177640, R3
Z21074: ADD	R3, R1
Z21076: MOV	#000020, R2
Z21102: CMPB	(R1), #000040
Z21106: BNE	Z21114
Z21110: MOVB	#000370, (R1)
Z21114: ADD	#000040, R1
Z21120: SOB	R2, Z21102
Z21122: RETURN	
	.WORD	0
; Данные для счётчика Y00162 -- тайлы скроллируемого фона
Z21126:	.BYTE	370,360,361,362,363,363,364,364,365,365,366,366,367,367,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,367,367,366,366,365,365,364,364
	.BYTE	363,363,362,361,360,370,360,361,362,363,363,364,364,365,365,366
	.BYTE	366,367,367,040,040,040,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,040,040,040,040,040,040,040,040
Z21323:	.BYTE	370,040,040,040,040,040,040,040,040,040,040,040,040,040,360,360
	.BYTE	360,361,361,361,362,362,362,363,363,363,364,364,364,364,365,365
	.BYTE	365,365,365,366,366,366,366,366,366,366,366,366,366,366,366,366
	.BYTE	366,366,366,365,365,365,365,365,364,364,364,364,363,363,363,362
	.BYTE	362,362,361,361,361,360,360,360,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,040,040,370,040,040,040,040,040,040,040,040,040,040
	.BYTE	040,040,040,360,360,360,361,361,361,362,362,362,363,363,363,364
	.BYTE	364,364,364,365,365,365,365,365,366,366,366,366,366

; Подпрограмма: Обработка счётчика Y00162
Z21520: SUB	#000002, @#Y00162
Z21526: MOV	@#Y00162, R3
Z21532: ADD	#Z21126, R3
Z21536: TSTB	(R3)
Z21540: BNE	Z21550
Z21542: MOV	#000124, @#Y00162
Z21550: RETURN	
;
Z21552: TSTB	@#Y00164
Z21556: BNE	Z21564
Z21560: JMP	Z21760
Z21564: MOVB   	@#Y00165, R0
Z21570: CMPB   	R0, #000040
Z21574: BHIS   	Z22000
Z21576: MOVB   	R0, Z34564
Z21602: MOVB   	#000006, Z34565
Z21610: MOV    	#000020, R2
Z21614: CALL   	Z33362
Z21620: MOV    	R1, -(SP)
Z21622: MOVB   	(R1), R0
Z21624: CMPB   	R0, #000040
Z21630: BEQ    	Z21646
Z21632: CMPB   	R0, #000371
Z21636: BHIS   	Z21652
Z21640: CMPB   	R0, #000360
Z21644: BLO    	Z21652
Z21646: MOVB   	#000371, (R1)
Z21652: ADD    	#000040, R1
Z21656: SOB    	R2, Z21622
Z21660: MOV    	(SP)+, R1
Z21662: MOVB   	@#Y00165, R2
Z21666: BIC    	#177400, R2
Z21672: ASR    	R2
Z21674: ASR    	R2
Z21676: SUB    	#000004, R2
Z21702: TSTB   	R2
Z21704: BEQ    	Z22000
Z21706: BMI    	Z21716
Z21710: MOV    	#000001, R3
Z21714: BR     	Z21724
Z21716: MOV    	#177777, R3
Z21722: NEGB   	R2
Z21724: BIC    	#177400, R2
Z21730: MOVB   	@#Y00165, R0
Z21734: BIC    	#177400, R0
Z21740: CMPB   	R0, #000040
Z21744: BHIS   	Z21752
Z21746: MOVB   	#000371, (R1)
Z21752: ADD    	R3, R1
Z21754: ADD    	R3, R0
Z21756: SOB    	R2, Z21734
Z21760: TSTB	@#Y00167
Z21764: BEQ	Z21770
Z21766: RETURN	
Z21770: CMPB   	@#Y00166, #000024
Z21776: BHIS   	Z21766
Z22000: CMPB   	@#Y00022, #000003
Z22006: BHIS   	Z21766
Z22010: MOVB   	@#Y00006, R0
Z22014: DECB   	R0
Z22016: BNE    	Z21766
Z22020: TSTB   	@#Y00035		; демо-режим?
Z22024: BNE    	Z21766
Z22026: TSTB   	@#Y00034
Z22032: BNE    	Z21766
Z22034: MOV    	#<Y01106+116>, R1	; Адрес в экран план
Z22040: MOV    	#Z22160, R3		; Адрес строки CAUTION
Z22044: JMP    	Z34366			; Печать строки
;
Z22050: TSTB	@#Y00164
Z22054: BEQ	Z22156
Z22056: MOVB   	@#Y00165, R0
Z22062: BIC    	#177400, R0
Z22066: MOV    	R0, Z34560
Z22072: ASR    	R0
Z22074: ASR    	R0
Z22076: SUB    	#000004, R0
Z22102: ADD    	Z34560, R0
Z22106: BIC    	#177400, R0
Z22112: CMPB   	R0, #000040
Z22116: BHIS   	Z22156
Z22120: MOVB   	R0, Z34564
Z22124: MOVB   	#000006, Z34565
Z22132: MOV    	#000022, R2
Z22136: CALL   	Z33362
Z22142: MOV    	#000371, R0
Z22146: MOVB   	R0, (R1)
Z22150: ADD    	#000040, R1
Z22154: SOB    	R2, Z22146
Z22156: RETURN	
;
Z22160: .BYTE	2, 1, 3, 037, 022, 1, 023, 2, 0
	.ASCIZ	/CAUTION!/

Z22202: TSTB	@#Y00164
Z22206: BNE	Z22234
Z22210: DEC	@#Y00166
Z22214: BNE	Z22232
Z22216: MOVB   	#000001, @#Y00164
Z22224: MOVB   	#000001, @#Y00165
Z22232: RETURN	
Z22234: MOVB   	@#Y00165, R0
Z22240: ADD    	#000002, R0
Z22244: MOVB   	R0, @#Y00165
Z22250: CMPB   	R0, #000040
Z22254: BLO    	Z22232
Z22256: CLRB   	@#Y00164
Z22262: MOV    	@#Y00170, R3
Z22266: MOVB   	(R3)+, Z34566
Z22272: MOVB   	(R3)+, Z34567
Z22276: MOV    	Z34566, R2
Z22302: MOV    	R3, @#Y00170
Z22306: MOV    	R2, @#Y00166
Z22312: BNE    	Z22232
Z22314: MOV    	#Z31240, R3
Z22320: BR     	Z22266
;
; Подпрограмма: Скопировать блок тайлов поезда в 448. байт
Z22322: MOV	#Y00202, R3		; Адрес блока тайлов поезда
Z22326: MOV	#<Y01106+500>, R2	; Экран план, 10.-я строка
Z22332: MOV	#000700, R1		; 448. = 14 строк по 32 тайла
Z22336: MOVB	(R3)+, (R2)+		;   копируем
Z22340: SOB	R1, Z22336		; повторяем
Z22342: TSTB	@#Y00155
Z22346: BEQ	Z22352
Z22350: RETURN	
Z22352: MOVB	@#Y00154, R0
Z22356: BIC	#177400, R0
Z22362: MOV	#000040, R2
Z22366: SUB	R0, R2
Z22370: BIC	#177400, R2
Z22374: MOVB	R0, Z34564
Z22400: MOVB	#000012, Z34565
Z22406: CALL	Z33362
Z22412: MOV	#000014, R3
Z22416: MOV	#000040, R0
Z22422: MOV	R2, R4
Z22424: MOVB	R0, (R1)+
Z22426: SOB	R4, Z22424
Z22430: MOVB	@#Y00154, R4
Z22434: BIC	#177400, R4
Z22440: BEQ	Z22444
Z22442: ADD	R4, R1
Z22444: SOB	R3, Z22416
Z22446: MOV	#000147, R0
Z22452: MOV	R2, R4
Z22454: MOVB	R0, (R1)+
Z22456: SOB	R4, Z22454
Z22460: RETURN	

Z22462:	RETURN	;STUB

	.=022712
; Подрограмма: Скроллинг насыпи под поездом
Z22712: MOVB	@#<Y00202+672>, Z34562
Z22720: MOVB	@#<Y00202+673>, R0
Z22724: MOV	#<Y00202+676>, R3
Z22730: MOV	#Y01102, R2
Z22734: MOV	#000036, R1
Z22740: MOVB	-(R3), -(R2)
Z22742: SOB	R1, Z22740
Z22744: MOVB	R0, -(R2)
Z22746: MOVB	Z34562, -(R2)
Z22752: RETURN	
;
; Подпрограмма: Уменьшаем оставшееся время
Z22754: TSTB	@#Y00026		; Быстрый счётчик времени = 0 ?
Z22760: BEQ	Z22764			; да => переходим
Z22762: RETURN				;
Z22764: TSTB	@#Y00004		; Время закончилось?
Z22770: BNE	Z22774			; нет => переходим
Z22772: RETURN 				;
Z22774: DECB	@#Y00004		; Уменьшаем счётчик времени
Z23000: RETURN				;
;
Z23002: TSTB	@#Y00034
Z23006: BEQ	Z23012
Z23010: RETURN 	
Z23012: TSTB	@#Y00004
Z23016: BNE	Z23030
Z23020: MOVB   	#000377, @#Y00034
Z23026: RETURN 	
Z23030: CMPB	@#Y00042, #000007	; Положение человечка Y = 7 ?
Z23036: BNE	Z23070
Z23040: MOV	#<Y01106+517>, R1
Z23044: MOV	#000040, R2
Z23050: CMPB	(R1)+, R2
Z23052: BNE	Z23140
Z23054: CMPB   	(R1), R2
Z23056: BNE    	Z23140
Z23060: MOVB   	#000001, @#Y00034
Z23066: RETURN 	
Z23070: CMPB   	@#Y00042, #000007	; Положение человечка Y = 7 ?
Z23076: BHIS   	Z23140
Z23100: TSTB   	@#Y00164
Z23104: BEQ    	Z23140
Z23106: MOVB   	@#Y00165, R0
Z23112: SUB    	#000017, R0
Z23116: BIC    	#177400, R0
Z23122: CMPB   	R0, #000002
Z23126: BHIS   	Z23140
Z23130: MOVB   	#000002, @#Y00034
Z23136: RETURN 	
Z23140: MOV	#Y00100, R5
Z23144: MOV	#000010, R2
Z23150: MOVB	(R5), R0
Z23152: BIC	#177400, R0
Z23156: CMPB	R0, #000377
Z23162: BNE	Z23170
Z23164: JMP	Z23436
Z23170: CMPB	R0, #000002
Z23174: BLO	Z23362
Z23176: CMPB	R0, #000004
Z23202: BEQ	Z23362
Z23204: MOVB	000002(R5), R0
Z23210: SUB	#000015, R0
Z23214: BIC	#177400, R0
Z23220: CMPB	R0, #000004
Z23224: BHIS	Z23322
Z23226: CMPB   	@#Y00042, #000005	; Положение человечка Y = 5 ?
Z23234: BEQ    	Z23246
Z23236: MOVB   	#000003, @#Y00034
Z23244: RETURN 	
Z23246: MOVB   	#000004, (R5)
Z23252: INCB   	000002(R5)
Z23256: INCB   	000003(R5)
Z23262: MOVB   	#000006, 000004(R5)
Z23270: MOVB   	#000001, @#Y00040
Z23276: MOV    	#Z33030, @#Y00032
Z23304: TSTB   	@#Y00035		; демо-режим?
Z23310: BNE    	Z23320			; да => переходим
Z23312: ADD    	#000012, @#Y00000
Z23320: RETURN 	
Z23322: MOVB	@#Y00065, R0
Z23326: DECB	R0
Z23330: BNE	Z23362
Z23332: MOVB   	@#Y00063, R0
Z23336: MOVB   	000002(R5), R4
Z23342: SUB    	R4, R0
Z23344: BIC    	#177400, R0
Z23350: CMPB   	R0, #000003
Z23354: BHIS   	Z23362
Z23356: JMP    	Z23246
Z23362: TSTB	000005(R5)
Z23366: BEQ	Z23430
Z23370: MOVB	000006(R5), R0
Z23374: SUB	#000017, R0
Z23400: CMPB	R0, #000002
Z23404: BHIS	Z23430
Z23406: TSTB	@#Y00044
Z23412: BNE	Z23430
Z23414: MOVB	#000004, @#Y00034
Z23422: CLRB	000005(R5)
Z23426: RETURN	
Z23430: ADD	R2, R5
Z23432: JMP	Z23150
Z23436: MOVB	@#Y00065, R0
Z23442: DECB	R0
Z23444: BNE	Z23502
Z23446: MOVB   	@#Y00063, R0
Z23452: SUB    	#000015, R0
Z23456: CMPB   	R0, #000004
Z23462: BHIS   	Z23502
Z23464: MOVB   	#000005, @#Y00034
Z23472: MOVB   	#000002, @#Y00065
Z23500: RETURN 	
Z23502: TSTB	@#Y00074
Z23506: BEQ	Z23604
Z23510: MOVB	@#Y00073, R0
Z23514: SUB	#000015, R0
Z23520: CMPB	R0, #000004
Z23524: BHIS	Z23604
Z23526: MOVB	@#Y00042, R0		; Положение человечка Y
Z23532: SUB	#000005, R0
Z23536: BIC	#177400, R0
Z23542: BNE	Z23604
Z23544: MOVB   	@#Y00054, R0
Z23550: BNE    	Z23604
Z23552: MOVB   	R0, @#Y00074
Z23556: MOVB   	R0, @#Y00075
Z23562: INC    	R0
Z23564: MOVB   	R0, @#Y00054
Z23570: MOVB   	R0, @#Y00040
Z23574: MOV    	#Z32724, @#Y00032
Z23602: RETURN 	
Z23604: RETURN

Z23606: TSTB   	@#Y00034
Z23612: BNE    	Z23630
Z23614: TSTB   	@#Y00004		; Время закончилось?
Z23620: BNE    	Z23632			; нет => переходим
Z23622: MOVB   	#000377, @#Y00034
Z23630: RETURN 	
Z23632: TSTB   	@#Y00155
Z23636: BNE    	Z23666
Z23640: CMPB   	@#Y00154, #000022
Z23646: BNE    	Z23666
Z23650: MOVB   	#000001, @#Y00034
Z23656: MOVB   	#000025, @#Y00042	; Положение человечка Y = 23.
Z23664: RETURN 	
Z23666: TSTB   	@#Y00036
Z23672: BEQ    	Z23700
Z23674: JMP    	Z24212
Z23700: CMPB   	@#Y00155, #000023
Z23706: BNE    	Z23724
Z23710: CMPB   	@#Y00154, #000022
Z23716: BNE    	Z23724
Z23720: JMP    	Z26474			; Переход на какой-то отдельный игровой цикл
Z23724: MOV    	#Y00100, R5		; Адрес 4-х записей объектов
Z23730: MOV    	#000010, R2
Z23734: MOVB   	(R5), R0
Z23736: CMPB   	R0, #000377
Z23742: BNE    	Z23750
Z23744: JMP    	Z24212
Z23750: CMPB   	R0, #000002
Z23754: BLO    	Z24120
Z23756: CMPB   	R0, #000004
Z23762: BEQ    	Z24120
Z23764: MOVB   	000002(R5), R0
Z23770: SUB    	#000016, R0
Z23774: BIC    	#177400, R0
Z24000: CMPB   	R0, #000003
Z24004: BHIS   	Z24120
Z24006: MOVB   	@#Y00042, R0		; Положение человечка Y
Z24012: CMPB   	R0, #000016
Z24016: BLO    	Z24120
Z24020: CMPB   	R0, #000020
Z24024: BLO    	Z24036
Z24026: MOVB   	#000003, @#Y00034
Z24034: RETURN 	
Z24036: MOVB   	#000004, (R5)
Z24042: MOVB   	#000010, 000001(R5)
Z24050: INCB   	000002(R5)
Z24054: INCB   	000003(R5)
Z24060: MOVB   	#000010, 000004(R5)
Z24066: MOVB   	#000001, @#Y00040
Z24074: MOV    	#Z33030, @#Y00032
Z24102: TSTB   	@#Y00035		; демо-режим?
Z24106: BNE    	Z24116			; да => выходим
Z24110: ADD    	#000012, @#Y00000
Z24116: RETURN 	
Z24120: TSTB   	000005(R5)
Z24124: BEQ    	Z24204
Z24126: MOVB   	000006(R5), R0
Z24132: SUB    	#000017, R0
Z24136: BIC    	#177400, R0
Z24142: CMPB   	R0, #000002
Z24146: BHIS   	Z24204
Z24150: MOVB   	@#Y00042, R0		; Положение человечка Y
Z24154: CMPB   	R0, #000016
Z24160: BLO    	Z24204
Z24162: CMPB   	R0, #000021
Z24166: BEQ    	Z24204
Z24170: MOVB   	#000004, @#Y00034
Z24176: CLRB   	000005(R5)
Z24202: RETURN 	
Z24204: ADD    	R2, R5
Z24206: JMP    	Z23734
Z24212: CMPB   	@#Y00042, #000017	; Положение человечка Y = 15. ?
Z24220: BHIS   	Z24314
Z24222: MOVB   	@#Y00041, R1	; Положение человечка X
Z24226: MOVB   	@#Y00142, R0
Z24232: BIC    	#177400, R0
Z24236: CMPB   	R0, #000040
Z24242: BLO    	Z24266
Z24244: CMPB   	R0, #000200
Z24250: BHIS   	Z24260
Z24252: SUB    	#000040, R0
Z24256: BR     	Z24232
Z24260: ADD    	#000040, R0
Z24264: BR     	Z24232
Z24266: SUB    	R1, R0
Z24270: INCB   	R0
Z24272: BIC    	#177400, R0
Z24276: CMPB   	R0, #000003
Z24302: BHIS   	Z24314
Z24304: MOVB   	#000005, @#Y00034
Z24312: RETURN 	
Z24314: TSTB   	@#Y00036
Z24320: BEQ    	Z24464
Z24322: MOVB   	@#Y00042, R0	; Положение человечка Y
Z24326: CMPB   	R0, #000016
Z24332: BHIS   	Z24402
Z24334: MOVB   	@#Y00041, R0	; Положение человечка X
Z24340: SUB    	#000017, R0
Z24344: CMPB   	R0, #000003
Z24350: BHIS   	Z24402
Z24352: TSTB   	@#Y00037
Z24356: BNE    	024402
Z24360: MOVB   	#000001, @#Y00037
Z24366: MOVB   	#000001, @#Y00040
Z24374: MOV    	#Z32756, @#Y00032
Z24402: MOVB   	@#Y00041, R1	; Положение человечка X
Z24406: MOVB   	@#Y00147, R0
Z24412: SUB    	R1, R0
Z24414: INCB   	R0
Z24416: BIC    	#177400, R0
Z24422: CMPB   	R0, #000003
Z24426: BHIS   	Z24464
Z24430: MOVB   	@#Y00042, R1	; Положение человечка Y
Z24434: MOVB   	@#Y00150, R0
Z24440: SUB    	R1, R0
Z24442: INCB   	R0
Z24444: BIC    	#177400, R0
Z24450: CMPB   	R0, #000004
Z24454: BHIS   	Z24464
Z24456: MOVB   	#000006, @#Y00034
Z24464: RETURN 	
;
; Подпрограмма: Печать индикаторной строки вверху экрана
Z24466: MOV	#<Y01106+2>, R1		; Адрес в образе экрана план
Z24472: MOV	#Z24742, R3		; Адрес строки "TOP   SCORE TIME CAR STG"
Z24476: CALL	Z34366			; Печать строки
Z24502: MOV	@#Y00000, R2
Z24506: MOV	@#Y00002, R3
Z24512: SUB	R2, R3
Z24514: BHIS	Z24522
Z24516: MOV    	R2, @#Y00002
Z24522: MOV	#<Y01106+40>, R1	; Адрес на экране план
Z24526: MOV	@#Y00002, R3		; Top score
Z24532: CALL	Z34400			; Вывод 5-значного десятичного числа
Z24536: INC	R1
Z24540: MOV	@#Y00000, R3		; Score
Z24544: CALL	Z34400			; Вывод 5-значного десятичного числа
Z24550: INC	R1
Z24552: INC	R1
Z24554: MOVB	@#Y00004, R0		; Time
Z24560: CALL	Z34476			; Вывод 3-значного десятичного числа
Z24564: INC	R1
Z24566: MOVB	@#Y00155, R0		; Car
Z24572: BNE	Z24606
Z24574: MOV	#Z24736, R3		; Адрес строки "   "
Z24600: CALL	Z34366			; Печать строки
Z24604: BR	Z24624
Z24606: NEGB	R0
Z24610: BIC	#177400, R0		; оставить только младший байт
Z24614: ADD	#000024, R0		; +20.
Z24620: CALL	Z34476			; Вывод 3-значного десятичного числа
Z24624: INC	R1
Z24626: MOVB	@#Y00007, R0		; Stage
Z24632: CALL	Z34476			; Вывод 3-значного десятичного числа
Z24636: MOVB	@#Y00010, R0		; Lives
Z24642: BIC	#177400, R0
Z24646: DECB	R0			; рисовать будем не более 2-х человечков
Z24650: BPL	Z24654
Z24652: RETURN 	
Z24654: BNE	Z24660
Z24656: RETURN 	
Z24660: MOVB	R0, R4
Z24662: MOVB	#000036, R2
Z24666: MOV	R2, -(SP)		; Начало цикла рисования человечков
Z24670: MOVB	R2, Z34564
Z24674: CLRB	Z34565
Z24700: CALL	Z33362
Z24704: MOV	#Z11626, R3
Z24710: CALL	Z25402
Z24714: CALL	Z25402
Z24720: MOV	(SP)+, R2
Z24722: SUB	#000003, R2
Z24726: BIC	#177400, R2
Z24732: SOB	R4, Z24666		; Конец цикла рисования человечков
Z24734: RETURN	
;
Z24736: .ASCIZ	/   /
Z24742: .ASCIZ	/TOP   SCORE TIME CAR STG/
	.EVEN

; Подпрограмма: если демо-режим, то GAME OVER
Z24774: TSTB	@#Y00035		; демо-режим?
Z25000: BNE	Z25004			; да => переходим
Z25002: RETURN				;
Z25004: MOV    	#<Y01106+153>, R1	; Адрес в экран план
Z25010: MOV    	#Z25172, R3		; Адрес строки GAME OVER
Z25014: CALL   	Z34366			; Печать строки
Z25020: MOV    	#<Y01106+200>, R1
Z25024: MOVB   	@#Y00013, Z34570
Z25032: MOVB   	@#Y00014, Z34571
Z25040: MOV    	Z34570, R3
Z25044: MOV    	#000040, R2
Z25050: MOVB   	(R3)+, R0
Z25052: BNE    	Z25062
Z25054: MOV    	#Z25206, R3	; Адрес бегущей строки для демо-режима
Z25060: BR     	Z25050
Z25062: MOVB   	R0, (R1)+
Z25064: SOB    	R2, Z25050
Z25066: TSTB   	@#Y00020
Z25072: BEQ    	Z25076
Z25074: RETURN 	
Z25076: MOVB   	@#Y00013, Z34570
Z25104: MOVB   	@#Y00014, Z34571
Z25112: INC    	Z34570
Z25116: MOVB   	Z34570, @#Y00013
Z25124: MOVB   	Z34571, @#Y00014
Z25132: MOV    	Z34570, R3
Z25136: TSTB   	(R3)
Z25140: BEQ    	Z25144
Z25142: RETURN 	
Z25144: MOV    	#Z25206, R3	; Адрес бегущей строки для демо-режима
Z25150: MOV    	R3, Z34570
Z25154: MOVB   	Z34570, @#Y00013
Z25162: MOVB   	Z34571, @#Y00014
Z25170: RETURN 	
;
Z25172: .ASCIZ	/GAME   OVER/
	.EVEN
; Бегущая строка для демо-режима
Z25206: .ASCII	/           STOP THE "ITA EXPRESS"   /
Z25252: .ASCII	/ 1990 PORT TO MS0515 BY LWOW SOFT   /
Z25322: .ASCIZ	/ 2017 PORT TO UKNC BY NZEEMIN /
	.EVEN

	.=025402
; Подпрограмма
Z25402: MOVB	(R3), R0
Z25404: BNE	Z25416
Z25406: INC	R3
Z25410: MOVB	R0, @#101103
Z25414: RETURN	
Z25416: MOVB	@#Y01103, R0
Z25422: BIC	#177400, R0
Z25426: MOVB	(R3)+, Z34560
Z25432: ADD	Z34560, R0
Z25436: MOVB	R0, (R1)
Z25440: MOVB	(R3)+, R2
Z25442: BIC	#177400, R2
Z25446: ADD	R2, R1
Z25450: JMP	Z25402
;
; Подпрограмма: Увеличить счётчики
Z25454: MOVB	@#Y00015, Z34560
Z25462: MOV	#000001, R0
Z25466: XOR	R0, Z34560
Z25472: MOVB	Z34560, @#Y00015
Z25500: MOV	#Y00016, R3		; Счётчик
Z25504: CALL	Z25554
Z25510: MOV	#Y00020, R3		; Счётчик
Z25514: CALL	Z25554
Z25520: MOV	#Y00022, R3		; Счётчик
Z25524: CALL	Z25554
Z25530: MOV	#Y00024, R3		; Счётчик
Z25534: CALL	Z25554
Z25540: MOV	#Y00026, R3		; Быстрый счётчик времени
Z25544: CALL	Z25554
Z25550: MOV	#Y00030, R3		; Счётчик
Z25554: INCB	(R3)			; Увеличить этот счётчик
Z25556: CMPB	(R3), 000001(R3)	; дошли до лимита?
Z25562: BLO	Z25566			; нет => выходим
Z25564: CLRB	(R3)			; очищаем счётчик
Z25566: RETURN	

Z25666: RETURN	;STUB

Z25574: RETURN	;STUB

Z25734: CALL	Z26344
Z25740: CLRB	@#Y00164
Z25744: CLRB	@#Y00075
Z25750: CLRB	@#Y00074
Z25754: CLRB	@#Y00054
Z25760: CLRB	@#Y00065
Z25764: CLRB	@#Y00071
Z25770: MOVB	#000001, @#Y00006
Z25776: MOVB	#000001, @#Y00155
Z26004: MOV	#003417, R1
Z26010: MOVB	#000017, @#Y00041	; Положение человечка X = 15.
Z26016: MOVB	#000007, @#Y00042	; Положение человечка Y = 7
Z26024: MOV	#020616, @#Y00156
Z26032: CLR	@#Y00162
	RETURN	;STUB

Z26156: RETURN	;STUB

Z26344: RETURN	;STUB

Z26474: RETURN	;STUB

Z26740: RETURN	;STUB

	.=032724
Z32724:	.BYTE	335,001,000,000,000,000,000,000,335,001,000,000,335,001,000,000
	.BYTE	173,001,000,000,000,000,000,000,377,377
Z32756:	.BYTE	237,000,237,000,237,000,237,000,325,000,325,000,325,000,325,000
	.BYTE	357,000,357,000,357,000,357,000,216,000,216,000,216,000,216,000
	.BYTE	263,000,263,000,263,000,263,000,377,377
Z33030: .BYTE	216,000,107,000,237,000,120,000,275,000,137,000,357,000,167,000
	.BYTE	076,001,335,001,377,377,216,000,263,000,325,000,357,000,377,377
	.BYTE	216,000,360,000,264,000,000,000,377,377

	.=033102
; Подпрограмма: Очистка переменных
Z33102: CLR	R0
Z33104: MOVB	R0, @#Y00015
Z33110: MOVB	R0, @#Y00141
Z33114: MOVB	R0, @#Y01102
Z33120: MOVB	R0, @#Y01103
Z33124: DEC	R0
Z33126: MOVB	R0, @#Y00140
Z33132: MOV	#001400, R3
Z33136: MOV	R3, @#Y00016
Z33142: MOV	#002000, R3
Z33146: MOV	R3, @#Y00020
Z33152: MOVB	R3, @#Y00061
Z33156: MOVB	R3, @#Y00067
Z33162: MOV	R3, @#Y00076
Z33166: SWAB	R3
Z33170: MOVB	R3, @#Y00062
Z33174: MOVB	R3, @#Y00070
Z33200: MOV	#003000, @#Y00022	; Быстрый счётчик
Z33206: MOV	#004000, @#Y00024	; Быстрый счётчик
Z33214: MOV	#006400, @#Y00026	; Быстрый счётчик времени
Z33222: MOV	#010000, @#Y00030	; Быстрый счётчик
Z33230: CLR	@#Y00002		; Top score = 0
Z33234: MOV	#Z31200, R3		; Откуда копировать
Z33240: MOV	#<Y00202+640>, R2	; куда
Z33244: MOV	#000040, R1		; 32. раза
Z33250: MOVB	(R3)+, (R2)+		;   копируем байт
Z33252: SOB	R1, Z33250		; повторяем
Z33254: RETURN	
;
; Подпрограмма
Z33256: CALL	Z33420			; Очистка образа экрана
Z33262: CLRB	@#Y01105
Z33266: MOV	#Z34604, R3		; блок 200 тайлов с 000
Z33272: CALL	Z33302			; Скопировать тайлы
Z33276: JMP	Z33454			; Формирование реального экрана по образу
;
; Подпрограмма; Скопировать тайлы; параметр R3 = адрес откуда копировать
Z33302: MOVB	(R3)+, R0		; берём номер тайла с которого начинать
	MOVB	(R3)+, R1		; берём количество тайлов
	BIC	#177400, R0		; только младший байт
	BIC	#177400, R1		; только младший байт
	MOV	R0, R2			; \
	ASL	R0			; \
	ASL	R0			; \
	ASL	R0			; \
	ADD	R2, R0			; R0 = R0 * 9
	MOV	#Y04106, R2		; адрес начала блока тайлов
	ADD	R2, R0			; получили адрес куда копировать
	MOV	R1, R2			; \
	ASL	R1			; \
	ASL	R1			; \
	ASL	R1			; \
	ADD	R2, R1			; R1 = R1 * 9 -- получили количество байт
Z33350: MOVB	(R3)+, (R0)+		;   копируем байт
	SOB	R1, Z33350		; повторяем
Z33354: RETURN
;
Z33356: MOV    	R1, Z34564
Z33362: MOV	R5, -(SP)
Z33364: MOVB	Z34565, R5
Z33370: MOVB	Z34564, R1
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; \
	ASL	R5			; R5 = R5 * 32
	ADD	R5, R1
	ADD	#Y01106, R1		; Адрес начала образа экрана
	MOV	(SP)+, R5
Z33416: RETURN	
;
; Подпрограмма: Очистка образа экрана
Z33420: MOV	#000040, R0		; Пустой тайл (пробел)
	MOV	#Y01106, R3		; Адрес начала образа экрана план
	MOV	#001400, R1		; количество тайлов всего = 32. * 24.
Z33434: MOVB	R0, (R3)+		;   записываем тайл в образ экрана план
	SOB	R1, Z33434		; повторяем
	MOV	#001400, R1		; Цикл по образу экрана факт
	COM	R0			; инвертируем номер тайла
Z33446: MOVB	R0, (R3)+		;   записываем тайл в образ экрана факт
	SOB	R1, Z33446		; повторяем
Z33452: RETURN	
;
; Подпрограмма: Формирование реального экрана по образу
Z33454: MOV	R4, -(SP)		;
	MOV	R5, -(SP)		;
	MOV	#Y01106, R2		; Начало образа экрана план
	MOV	#Y02506, R3		; Начало образа экрана факт
	MOV	#103465, R4		; Адрес в ВОЗУ (пока приблизительно)
	MOV	#000030, R5		; 24. строки
Z33500: MOV	R5, -(SP)		; Начало цикла по строкам
	MOV	#000040, R5		; 32. символа в строке
Z33522: MOVB	(R2), R0		; Начало цикла по строке -- берём номер тайла
	CMPB	R0, (R3)		; тайл план совпадает с фактом?
	BEQ	Z33666			; да => пропускаем формирование этого тайла
Z33530: BIC	#177400, R0		; оставляем младший байт
Z33534: MOVB	R0, (R3)+		; обновляем факт
Z33536: MOV	R4, -(SP)		; сохраняем адрес на экране
Z33540: MOV	R0, R1			; \
Z33542: ASL	R0			; \
Z33544: ASL	R0			; \
Z33546: ASL	R0			; \
Z33550: ADD	R1, R0			; R0 = R0 * 9
Z33552: ADD	#Y04106, R0		; Плюс адрес начала блока тайлов
	MOVB	000010(R0), R1		; берём атрибут тайла
	MOV	R4, @#176640		; 0 строчка
	MOVB	(R0)+, @#176642		; пишем в растр
	ADD	#000120, R4		; плюс 80. -- следующая строка экрана
	MOV	R4, @#176640		; 1 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 2 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 3 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 4 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 5 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 6 строчка
	MOVB	(R0)+, @#176642		;
	ADD	#000120, R4 		;
	MOV	R4, @#176640		; 7 строчка
	MOVB	(R0)+, @#176642		;
Z33662: MOV	(SP)+, R4		; восстанавливаем адрес на экране в R4
Z33664: BR	Z33670
Z33666: MOVB	R0, (R3)+		; обновляем факт
Z33670: MOVB	#000040, (R2)+		; обновляем план
	INC	R4			; к следующей колонке
	DEC	R5			; NOTE: Было SOB R5, Z33522
	BNE	Z33522			; Конец цикла по строке
Z33714: ADD	#001140, R4		; к следующей строке экрана
	MOV	(SP)+, R5		; восстанавливаем счётчик по строкам
	DEC	R5			;
	BNE	Z33500			; Конец цикла по строкам
	MOV	(SP)+, R5		;
	MOV	(SP)+, R4		;
Z33732: RETURN	

Z34224:	.WORD	0			; Признак того что есть символ с клавиатуры
Z34226: 
;Z34264: MOV	#000377, R0
	CLR	Z34224			;DEBUG: Стираем признак нажатой клавиши
	SEZ				;DEBUG: Возвращаем признак Z=1 -- нажатия нет
	RETURN ;STUB

; Подпрограмма: что-то со звуком
Z34300:	RETURN ;STUB

	.=034366
;
; Подпрограмма: Печать строки; R3 = адрес строки; R1 = адрес в экран план
Z34366: TSTB	(R3)			; не ноль?
Z34370: BNE	Z34374			; нет => продолжаем
Z34372: RETURN				;
Z34374: MOVB	(R3)+, (R1)+		; копируем в экран план
Z34376: BR	Z34366			; продолжаем цикл
;
; Подпрограмма: Печать 5-значного десятичного числа; R3=число
Z34400: MOV	#023420, R2		; 10000.
Z34404: CALL	Z34454			;
Z34410: MOV	#001750, R2		; 1000.
Z34414: CALL	Z34454			;
Z34420: MOV	#000144, R2		; 100.
Z34424: CALL	Z34454			;
Z34430: MOV	#000012, R2		; 10.
Z34434: CALL	Z34454			;
Z34440: ADD	#000060, R3		; '0'
Z34444: MOVB	R3, (R1)+		;
Z34446: MOVB	#000060, (R1)+		;
Z34452: RETURN				;
Z34454: MOV	#000060, R0		; '0'
Z34460: SUB	R2, R3			;
Z34462: BLO	Z34470			;
Z34464: INC    	R0			;
Z34466: BR     	Z34460			;
Z34470: ADD	R2, R3			;
Z34472: MOVB	R0, (R1)+		; копируем в экран план
Z34474: RETURN	
; Подпрограмма: Печать 3-значного десятичного числа
Z34476: BIC	#177400, R0
Z34502: MOV	R3, -(SP)
Z34504: MOV	#000144, R2		; 100.
Z34510: CALL	Z34536			;
Z34514: MOV	#000012, R2		; 10.
Z34520: CALL	Z34536			;
Z34524: ADD	#000060, R0		; '0'
Z34530: MOVB	R0, (R1)+		;
Z34532: MOV	(SP)+, R3		;
Z34534: RETURN	
Z34536: MOV	#000060, R3		; '0'
Z34542: SUB	R2, R0			;
Z34544: BLO	Z34552			;
Z34546: INC	R3			;
Z34550: BR	Z34542			;
Z34552: ADD	R2, R0			;
Z34554: MOVB	R3, (R1)+		;
Z34556: RETURN				;

	.EVEN
Z34560:	.BYTE	0
	.BYTE	0
Z34562:	.BYTE	0
	.BYTE	0
Z34564:	.BYTE	0
Z34565:	.BYTE	0
Z34566:	.BYTE	0
Z34567:	.BYTE	0
Z34570: .BYTE	0
Z34571: .BYTE	0

;
; Блок переменных
;
	.EVEN
Y00000::.WORD	0
Y00002: .WORD	0
Y00004: .BYTE	200			; Оставшееся время, начальное значение 200
	.BYTE	0
Y00006: .BYTE	0			; ???
Y00007: .BYTE	1			; Stage
Y00010: .BYTE	3			; Lives -- счётчик жизней
Y00011: .BYTE	0			; Адрес распакованной последовательности
Y00012: .BYTE	0			; // старший байт адреса
Y00013: .BYTE	0			; Адрес бегущей строки демо-режима???
Y00014: .BYTE	0			; // старший байт адреса
Y00015: .BYTE	0			; ???
Y00016: .WORD	0			; Быстрый счётчик
Y00020: .WORD	0			; Быстрый счётчик
Y00022: .WORD	0			; Быстрый счётчик для счётчика Y00066
Y00024: .WORD	0			; Быстрый счётчик
Y00026: .WORD	0			; Быстрый счётчик времени
Y00030: .WORD	0			; Быстрый счётчик
Y00032:	.WORD	0
Y00034: .BYTE	0
Y00035: .BYTE	1			; Признак демо-режима: 1 демо, 0 реальная игра
Y00036:	.BYTE	0
Y00037:	.BYTE	0
Y00040:	.BYTE	0
Y00041: .BYTE	0			; Положение человечка X
Y00042: .BYTE	0			; Положение человечка Y
Y00043:	.BYTE	0
Y00044: .BYTE	0
Y00045:	.BYTE	0
Y00046: .BYTE	0			; ??? что-то с движением человечка
Y00047: .BYTE	0			; ??? что-то с движением человечка
Y00050: .BYTE	0
Y00051: .BYTE	0
	.BYTE	0,0
Y00054: .BYTE	0
	.BYTE	0,0,0,0
Y00061: .BYTE	0
Y00062: .BYTE	0
Y00063: .BYTE	0
Y00064: .BYTE	0
Y00065:	.BYTE	0
Y00066:	.BYTE	0
Y00067: .BYTE	0
Y00070: .BYTE	0
Y00071: .BYTE	0
Y00072:	.BYTE	0
Y00073:	.BYTE	0
Y00074: .BYTE	0
Y00075: .BYTE	0
Y00076: .WORD	0
Y00100: .BLKB	40			; 4 записи по 8. байт
Y00140: .BYTE	0
Y00141: .BYTE	0
Y00142: .BYTE	0
Y00143: .BYTE	0
Y00144: .BYTE	0
	.BYTE	0,0
Y00147: .BYTE
Y00150: .BYTE
	.BLKB	3
Y00154: .BYTE	0
Y00155: .BYTE	0
Y00156: .WORD	0
	.WORD	0
Y00162: .WORD	0
Y00164: .BYTE	0
Y00165: .BYTE	0
Y00166: .BYTE	0
Y00167:	.BYTE	0
Y00170: .WORD	0
	.WORD	0
Y00174: .BYTE	0
	.EVEN

.INCLUDE /TILES.MAC/

	.EVEN
; Блок тайлов поезда: 448. байт -- 14. строк по 32. байта
Y00202: .BLKB	700
Y01102: .BYTE	0
Y01103: .BYTE	0
	.BYTE	0
Y01105: .BYTE	0
; Образ экрана план -- 24. строки по 32. байта -- номер тайлов
Y01106::.BLKB	1400
; Образ экрана факт -- 24. строки по 32. байта -- номер тайлов
Y02506::.BLKB	1400

	.EVEN
; Блок тайлов 8x8 пикселей, 9 байт на тайл: 8 на данные пикселов, 1 атрибут
Y04106: .BLKB	4400			; 256. тайлов * 9 = 2304. байт

	.EVEN
; Место для демо-последовательности
Y24000:: .BLKB	4000	;TODO: Сколько места нужно?


	.END	START
